matrix:
  include:
    - language: java
      jdk: oraclejdk11
      cache:
        directories:
          - "$HOME/.m2"
      before_install:
        - pyenv global 3.7.13
        - pip install -U pip
        - pip install awscli
      install:
        - mvn clean install -P aws -DskipTests
      before_deploy:
        - cp -Rf 'bp-web-ws/target/bp-web-ws.jar' ${S3_DEPLOYMENT_OBJECT_NAME}
      deploy:
        - provider: cloudformation
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          region: us-east-2
          wait: true
          template: bp-web-ws/aws-cloudformation/cloud-formation-deployment-bucket-template.yaml
          stack_name: bytepushers-bp-web-deployment-bucket
          parameters:
            - BucketName=${S3_DEPLOYMENT_BUCKET}
          capabilities: [ CAPABILITY_NAMED_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND ]
          edge: true
          skip_cleanup: true
          on:
            branch: develop
        - provider: s3
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          bucket: ${S3_DEPLOYMENT_BUCKET}
          region: us-east-2
          skip_cleanup: true
          glob: ${S3_DEPLOYMENT_OBJECT_NAME}
          edge: true
          on:
            branch: develop
        - provider: cloudformation
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          region: us-east-2
          wait: true
          template: bp-web-ws/aws-cloudformation/cloud-formation-template.yaml
          stack_name: bytepushers-bp-web-ws
          parameters:
            - BucketName=${S3_DEPLOYMENT_BUCKET}
            - ObjectName=${S3_DEPLOYMENT_OBJECT_NAME}
            - CorsLambdaObjectName=cors-lambda.zip
          capabilities: [CAPABILITY_NAMED_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND]
          edge: true
          skip_cleanup: true
          on:
            branch: develop
        - provider: script
          script:  aws lambda update-function-code --publish --function-name bytepushers-bpweb-ws --s3-bucket ${S3_DEPLOYMENT_BUCKET} --s3-key ${S3_DEPLOYMENT_OBJECT_NAME} --region us-east-2
          on:
            branch: develop

        - provider: cloudformation
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          region: us-east-2
          wait: true
          template: bp-web-ws/aws-cloudformation/cloud-formation-deployment-bucket-template.yaml
          stack_name: bytepushers-bp-web-deployment-bucket
          parameters:
            - BucketName=${S3_DEPLOYMENT_BUCKET}
          capabilities: [ CAPABILITY_NAMED_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND ]
          edge: true
          skip_cleanup: true
          on:
            branch: master
        - provider: s3
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          bucket: ${S3_DEPLOYMENT_BUCKET}
          region: us-east-2
          skip_cleanup: true
          glob: ${S3_DEPLOYMENT_OBJECT_NAME}
          edge: true
          on:
            branch: master
        - provider: cloudformation
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          region: us-east-2
          wait: true
          template: bp-web-ws/aws-cloudformation/cloud-formation-template.yaml
          stack_name: bytepushers-bp-web-ws
          parameters:
            - BucketName=${S3_DEPLOYMENT_BUCKET}
            - ObjectName=${S3_DEPLOYMENT_OBJECT_NAME}
          capabilities: [ CAPABILITY_NAMED_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND ]
          edge: true
          skip_cleanup: true
          on:
            branch: master
        - provider: script
          script: aws lambda update-function-code --publish --function-name bytepushers-bpweb-ws --s3-bucket ${S3_DEPLOYMENT_BUCKET} --s3-key ${S3_DEPLOYMENT_OBJECT_NAME} --region us-east-2
          on:
            branch: master

    - language: node_js
      addons:
        apt:
          packages:
            - lftp
      node_js:
        - “12”
      cache:
        directories:
          - "bp-web-client/angular-app/node_modules"
      before_install:
        - pyenv global 3.7.13
        - pip install -U pip
        - pip install awscli
        - cd bp-web-client/angular-app/
      install:
        - npm install
      script:
        - if [ $TRAVIS_BRANCH = "master" ]; then
            echo -e "Running npm run build --prod";
            npm run build -- --prod;
          else
            echo -e "Running npm run build --configuration dev";
            npm run build -- --configuration dev;
          fi;
      deploy:
        - provider: script
          skip_cleanup: true
          script: node sftp.js && aws s3 sync dist/* ${STATIC_WEBSITE_S3_BUCKET_URL} && aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths "/*"
          on:
            branch: develop
        - provider: script
          skip_cleanup: true
          script: aws s3 sync dist/* ${STATIC_WEBSITE_S3_BUCKET_URL} && aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths "/*"
          on:
            branch: master
notifications:
  email:
    recipients:
      - tonte.pouncil@bytepushers.software
      - amanjotabroljava@gmail.com
    on_success: always
    on_failure: always
