{"ast":null,"code":"import _inherits from \"C:/Users/David/dev/chucks-pick3/chucks-pick3-web/angular-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/David/dev/chucks-pick3/chucks-pick3-web/angular-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/David/dev/chucks-pick3/chucks-pick3-web/angular-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/David/dev/chucks-pick3/chucks-pick3-web/angular-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { animate, style, AnimationBuilder } from '@angular/animations';\nimport { ListKeyManager } from '@angular/cdk/a11y';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Component, Input, ViewChild, TemplateRef, EventEmitter, Renderer2, Inject, PLATFORM_ID, Output, ContentChildren, HostListener, Injectable, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, interval } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { DomSanitizer, HammerGestureConfig, HAMMER_GESTURE_CONFIG, HammerModule } from '@angular/platform-browser';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/carousel-slide/carousel-slide.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/animations';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/material/icon';\n\nfunction MatCarouselSlideComponent_ng_template_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"background-color\", ctx_r1.overlayColor);\n  }\n}\n\nfunction MatCarouselSlideComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatCarouselSlideComponent_ng_template_0_div_3_Template, 1, 2, \"div\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-image\", ctx_r0.image);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideOverlay);\n  }\n}\n\nvar _c0 = [\"*\"];\nvar _c1 = [\"carouselContainer\"];\nvar _c2 = [\"carouselList\"];\n\nfunction MatCarouselComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"panleft\", function MatCarouselComponent_li_4_Template_li_panleft_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n\n      var _r7 = ɵngcc0.ɵɵreference(1);\n\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onPan($event, _r7);\n    })(\"panright\", function MatCarouselComponent_li_4_Template_li_panright_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n\n      var _r7 = ɵngcc0.ɵɵreference(1);\n\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onPan($event, _r7);\n    })(\"panend\", function MatCarouselComponent_li_4_Template_li_panend_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n\n      var _r7 = ɵngcc0.ɵɵreference(1);\n\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onPanEnd($event, _r7);\n    })(\"pancancel\", function MatCarouselComponent_li_4_Template_li_pancancel_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n\n      var _r7 = ɵngcc0.ɵɵreference(1);\n\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onPanEnd($event, _r7);\n    });\n    ɵngcc0.ɵɵelementContainer(2, 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var slide_r6 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"padding-bottom\", ctx_r2.maintainAspectRatio && ctx_r2.proportion ? ctx_r2.proportion + \"%\" : \"0px\")(\"height\", !ctx_r2.maintainAspectRatio && ctx_r2.slideHeight ? ctx_r2.slideHeight : \"0px\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", slide_r6.templateRef);\n  }\n}\n\nfunction MatCarouselComponent_button_5_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-icon\", 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"svgIcon\", ctx_r13.svgIconOverrides.arrowBack);\n  }\n}\n\nfunction MatCarouselComponent_button_5_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"arrow_back\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatCarouselComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCarouselComponent_button_5_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      var ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.previous();\n    });\n    ɵngcc0.ɵɵtemplate(1, MatCarouselComponent_button_5_mat_icon_1_Template, 1, 1, \"mat-icon\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatCarouselComponent_button_5_ng_template_2_Template, 2, 0, \"ng-template\", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r14 = ɵngcc0.ɵɵreference(3);\n\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r3.color)(\"disabled\", !ctx_r3.loop && ctx_r3.currentIndex == 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.svgIconOverrides == null ? null : ctx_r3.svgIconOverrides.arrowBack)(\"ngIfElse\", _r14);\n  }\n}\n\nfunction MatCarouselComponent_button_6_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-icon\", 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"svgIcon\", ctx_r18.svgIconOverrides.arrowForward);\n  }\n}\n\nfunction MatCarouselComponent_button_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"arrow_forward\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatCarouselComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCarouselComponent_button_6_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var ctx_r21 = ɵngcc0.ɵɵnextContext();\n      return ctx_r21.next();\n    });\n    ɵngcc0.ɵɵtemplate(1, MatCarouselComponent_button_6_mat_icon_1_Template, 1, 1, \"mat-icon\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatCarouselComponent_button_6_ng_template_2_Template, 2, 0, \"ng-template\", null, 14, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r19 = ɵngcc0.ɵɵreference(3);\n\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r4.color)(\"disabled\", !ctx_r4.loop && ctx_r4.currentIndex == ctx_r4.slidesList.length - 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.svgIconOverrides == null ? null : ctx_r4.svgIconOverrides.arrowForward)(\"ngIfElse\", _r19);\n  }\n}\n\nfunction MatCarouselComponent_div_7_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r27 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 17);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCarouselComponent_div_7_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r27);\n      var i_r25 = ctx.index;\n      var ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r26.slideTo(i_r25);\n    })(\"focus\", function MatCarouselComponent_div_7_button_1_Template_button_focus_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r27);\n      ɵngcc0.ɵɵnextContext(2);\n\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      return _r0.focus();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var i_r25 = ctx.index;\n    var ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r23.color)(\"disabled\", i_r25 == ctx_r23.currentIndex);\n  }\n}\n\nfunction MatCarouselComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtemplate(1, MatCarouselComponent_div_7_button_1_Template, 1, 2, \"button\", 16);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"flex-direction\", ctx_r5.orientation === \"rtl\" ? \"row-reverse\" : \"row\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.slidesList);\n  }\n}\n\nvar MatCarouselSlideComponent = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} sanitizer\r\n   */\n  function MatCarouselSlideComponent(sanitizer) {\n    _classCallCheck(this, MatCarouselSlideComponent);\n\n    this.sanitizer = sanitizer;\n    this.overlayColor = '#00000040';\n    this.hideOverlay = false;\n    this.disabled = false; // implements ListKeyManagerOption\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(MatCarouselSlideComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.image) {\n        this.image = this.sanitizer.bypassSecurityTrustStyle(\"url(\\\"\".concat(this.image, \"\\\")\"));\n      }\n    }\n  }]);\n\n  return MatCarouselSlideComponent;\n}();\n\nMatCarouselSlideComponent.ɵfac = function MatCarouselSlideComponent_Factory(t) {\n  return new (t || MatCarouselSlideComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer));\n};\n\nMatCarouselSlideComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCarouselSlideComponent,\n  selectors: [[\"mat-carousel-slide\"]],\n  viewQuery: function MatCarouselSlideComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  inputs: {\n    overlayColor: \"overlayColor\",\n    hideOverlay: \"hideOverlay\",\n    disabled: \"disabled\",\n    image: \"image\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"carousel-slide\"], [1, \"carousel-slide-content\"], [\"class\", \"carousel-slide-overlay\", 3, \"background-color\", 4, \"ngIf\"], [1, \"carousel-slide-overlay\"]],\n  template: function MatCarouselSlideComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatCarouselSlideComponent_ng_template_0_Template, 4, 3, \"ng-template\");\n    }\n  },\n  directives: [ɵngcc2.NgIf],\n  styles: [\".carousel-slide[_ngcontent-%COMP%]{background-position:50%;background-repeat:no-repeat;background-size:cover}.carousel-slide[_ngcontent-%COMP%], .carousel-slide-overlay[_ngcontent-%COMP%]{height:100%;position:absolute;width:100%;z-index:auto}.carousel-slide-content[_ngcontent-%COMP%]{height:100%;position:absolute;width:100%;z-index:1}\"]\n});\n/** @nocollapse */\n\nMatCarouselSlideComponent.ctorParameters = function () {\n  return [{\n    type: DomSanitizer\n  }];\n};\n\nMatCarouselSlideComponent.propDecorators = {\n  image: [{\n    type: Input\n  }],\n  overlayColor: [{\n    type: Input\n  }],\n  hideOverlay: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: ViewChild,\n    args: [TemplateRef]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCarouselSlideComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-carousel-slide',\n      template: \"<ng-template>\\r\\n  <div class=\\\"carousel-slide\\\" [style.background-image]=\\\"image\\\">\\r\\n    <div class=\\\"carousel-slide-content\\\"><ng-content></ng-content></div>\\r\\n    <div\\r\\n      *ngIf=\\\"!hideOverlay\\\"\\r\\n      class=\\\"carousel-slide-overlay\\\"\\r\\n      [style.background-color]=\\\"overlayColor\\\"\\r\\n    ></div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\",\n      styles: [\".carousel-slide{background-position:50%;background-repeat:no-repeat;background-size:cover}.carousel-slide,.carousel-slide-overlay{height:100%;position:absolute;width:100%;z-index:auto}.carousel-slide-content{height:100%;position:absolute;width:100%;z-index:1}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.DomSanitizer\n    }];\n  }, {\n    overlayColor: [{\n      type: Input\n    }],\n    hideOverlay: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    image: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatCarouselSlideComponent.prototype.image;\n  /** @type {?} */\n\n  MatCarouselSlideComponent.prototype.overlayColor;\n  /** @type {?} */\n\n  MatCarouselSlideComponent.prototype.hideOverlay;\n  /** @type {?} */\n\n  MatCarouselSlideComponent.prototype.disabled;\n  /** @type {?} */\n\n  MatCarouselSlideComponent.prototype.templateRef;\n  /** @type {?} */\n\n  MatCarouselSlideComponent.prototype.sanitizer;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/carousel.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @enum {number} */\n\n\nvar Direction = {\n  Left: 0,\n  Right: 1,\n  Index: 2\n};\nDirection[Direction.Left] = 'Left';\nDirection[Direction.Right] = 'Right';\nDirection[Direction.Index] = 'Index';\n\nvar MatCarouselComponent = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} animationBuilder\r\n   * @param {?} renderer\r\n   * @param {?} platformId\r\n   */\n  function MatCarouselComponent(animationBuilder, renderer, platformId) {\n    _classCallCheck(this, MatCarouselComponent);\n\n    this.animationBuilder = animationBuilder;\n    this.renderer = renderer;\n    this.platformId = platformId;\n    this.timings = '250ms ease-in';\n    this.hideArrows = true;\n    this.hideIndicators = true;\n    this.color = 'accent';\n    this.maintainAspectRatio = true;\n    this.proportion = 25;\n    this.slideHeight = '100%';\n    this.useKeyboard = false;\n    this.useMouseWheel = false;\n    this.change = new EventEmitter();\n    this._autoplay = true;\n    this.autoplay$ = new Subject();\n    this.interval$ = new BehaviorSubject(5000);\n    this.slides$ = new BehaviorSubject(null);\n    this._maxWidth = 'auto';\n    this.maxWidth$ = new Subject();\n    this._loop = true;\n    this.loop$ = new Subject();\n    this._orientation = 'ltr';\n    this.orientation$ = new Subject();\n    this.timerStop$ = new Subject();\n    this.destroy$ = new Subject();\n    this.playing = false;\n  }\n  /**\r\n   * @param {?} value\r\n   * @return {?}\r\n   */\n\n\n  _createClass(MatCarouselComponent, [{\n    key: \"ngAfterContentInit\",\n\n    /**\r\n     * @return {?}\r\n     */\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this.listKeyManager = new ListKeyManager(this.slidesList).withVerticalOrientation(false).withHorizontalOrientation(this._orientation).withWrap(this._loop);\n      this.listKeyManager.updateActiveItem(0);\n      this.listKeyManager.change.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this.playAnimation();\n      });\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        _this2.stopTimer();\n\n        _this2.startTimer(value);\n      });\n      this.interval$.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        _this2.stopTimer();\n\n        _this2.resetTimer(value);\n\n        _this2.startTimer(_this2._autoplay);\n      });\n      this.maxWidth$.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this2.slideTo(0);\n      });\n      this.loop$.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        return _this2.listKeyManager.withWrap(value);\n      });\n      this.orientation$.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        return _this2.listKeyManager.withHorizontalOrientation(value);\n      });\n      this.slides$.pipe(takeUntil(this.destroy$), filter(\n      /**\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        return value && value < _this2.slidesList.length;\n      })).subscribe(\n      /**\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function (value) {\n        return _this2.resetSlides(value);\n      });\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.goto(Direction.Right);\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      this.goto(Direction.Left);\n    }\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"slideTo\",\n    value: function slideTo(index) {\n      this.goto(Direction.Index, index);\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp(event) {\n      if (this.useKeyboard && !this.playing) {\n        this.listKeyManager.onKeydown(event);\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.stopTimer();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.startTimer(this._autoplay);\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onMouseWheel\",\n    value: function onMouseWheel(event) {\n      if (this.useMouseWheel) {\n        event.preventDefault(); // prevent window to scroll\n        // prevent window to scroll\n\n        /** @type {?} */\n\n        var Δ = Math.sign(event.deltaY);\n\n        if (Δ > 0) {\n          this.next();\n        } else if (Δ < 0) {\n          this.previous();\n        }\n      }\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onResize\",\n    value: function onResize(event) {\n      // Reset carousel when window is resized\n      // in order to avoid major glitches.\n      this.slideTo(0);\n    }\n    /**\r\n     * @param {?} event\r\n     * @param {?} slideElem\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onPan\",\n    value: function onPan(event, slideElem) {\n      // https://github.com/angular/angular/issues/10541#issuecomment-346539242\n      // if y velocity is greater, it's a panup/pandown, so ignore.\n      if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var Δx = event.deltaX;\n\n      if (this.isOutOfBounds()) {\n        Δx *= 0.2; // decelerate movement;\n      }\n\n      this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\n      this.renderer.setStyle(this.carouselList.nativeElement, 'transform', this.getTranslation(this.getOffset() + Δx));\n    }\n    /**\r\n     * @param {?} event\r\n     * @param {?} slideElem\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onPanEnd\",\n    value: function onPanEnd(event, slideElem) {\n      this.renderer.removeStyle(slideElem, 'cursor');\n\n      if (!this.isOutOfBounds() && Math.abs(event.deltaX) > this.getWidth() * 0.25) {\n        if (event.deltaX <= 0) {\n          this.next();\n          return;\n        }\n\n        this.previous();\n        return;\n      }\n\n      this.playAnimation(); // slide back, don't change current index\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"isOutOfBounds\",\n    value: function isOutOfBounds() {\n      /** @type {?} */\n      var sign = this.orientation === 'rtl' ? -1 : 1;\n      /** @type {?} */\n\n      var left = sign * (this.carouselList.nativeElement.getBoundingClientRect().left - this.carouselList.nativeElement.offsetParent.getBoundingClientRect().left);\n      /** @type {?} */\n\n      var lastIndex = this.slidesList.length - 1;\n      /** @type {?} */\n\n      var width = -this.getWidth() * lastIndex;\n      return this.listKeyManager.activeItemIndex === 0 && left >= 0 || this.listKeyManager.activeItemIndex === lastIndex && left <= width;\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      if (!isPlatformBrowser(this.platformId)) {\n        return false;\n      }\n      /** @type {?} */\n\n\n      var elem = this.carouselContainer.nativeElement;\n      /** @type {?} */\n\n      var docViewTop = window.pageYOffset;\n      /** @type {?} */\n\n      var docViewBottom = docViewTop + window.innerHeight;\n      /** @type {?} */\n\n      var elemOffset = elem.getBoundingClientRect();\n      /** @type {?} */\n\n      var elemTop = docViewTop + elemOffset.top;\n      /** @type {?} */\n\n      var elemBottom = elemTop + elemOffset.height;\n      return elemBottom <= docViewBottom || elemTop >= docViewTop;\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getOffset\",\n    value: function getOffset() {\n      /** @type {?} */\n      var offset = this.listKeyManager.activeItemIndex * this.getWidth();\n      /** @type {?} */\n\n      var sign = this.orientation === 'rtl' ? 1 : -1;\n      return sign * offset;\n    }\n    /**\r\n     * @private\r\n     * @param {?} offset\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getTranslation\",\n    value: function getTranslation(offset) {\n      return \"translateX(\".concat(offset, \"px)\");\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.carouselContainer.nativeElement.clientWidth;\n    }\n    /**\r\n     * @private\r\n     * @param {?} direction\r\n     * @param {?=} index\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"goto\",\n    value: function goto(direction, index) {\n      if (!this.playing) {\n        /** @type {?} */\n        var rtl = this.orientation === 'rtl';\n\n        switch (direction) {\n          case Direction.Left:\n            return rtl ? this.listKeyManager.setNextItemActive() : this.listKeyManager.setPreviousItemActive();\n\n          case Direction.Right:\n            return rtl ? this.listKeyManager.setPreviousItemActive() : this.listKeyManager.setNextItemActive();\n\n          case Direction.Index:\n            return this.listKeyManager.setActiveItem(index);\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"playAnimation\",\n    value: function playAnimation() {\n      var _this3 = this;\n\n      /** @type {?} */\n      var translation = this.getTranslation(this.getOffset());\n      /** @type {?} */\n\n      var factory = this.animationBuilder.build(animate(this.timings, style({\n        transform: translation\n      })));\n      /** @type {?} */\n\n      var animation = factory.create(this.carouselList.nativeElement);\n      animation.onStart(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this3.playing = true;\n      });\n      animation.onDone(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        _this3.change.emit(_this3.currentIndex);\n\n        _this3.playing = false;\n\n        _this3.renderer.setStyle(_this3.carouselList.nativeElement, 'transform', translation);\n\n        animation.destroy();\n      });\n      animation.play();\n    }\n    /**\r\n     * @private\r\n     * @param {?} slides\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"resetSlides\",\n    value: function resetSlides(slides) {\n      this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\n    }\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer(value) {\n      this.timer$ = interval(value);\n    }\n    /**\r\n     * @private\r\n     * @param {?} autoplay\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"startTimer\",\n    value: function startTimer(autoplay) {\n      var _this4 = this;\n\n      if (!autoplay) {\n        return;\n      }\n\n      this.timer$.pipe(takeUntil(this.timerStop$), takeUntil(this.destroy$), filter(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return _this4.isVisible();\n      })).subscribe(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        _this4.listKeyManager.withWrap(true).setNextItemActive();\n\n        _this4.listKeyManager.withWrap(_this4.loop);\n      });\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"stopTimer\",\n    value: function stopTimer() {\n      this.timerStop$.next();\n    }\n  }, {\n    key: \"autoplay\",\n    set: function set(value) {\n      this.autoplay$.next(value);\n      this._autoplay = value;\n    }\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"interval\",\n    set: function set(value) {\n      this.interval$.next(value);\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"loop\",\n    get: function get() {\n      return this._loop;\n    }\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n    ,\n    set: function set(value) {\n      this.loop$.next(value);\n      this._loop = value;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"maxWidth\",\n    get: function get() {\n      return this._maxWidth;\n    }\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n    ,\n    set: function set(value) {\n      this._maxWidth = value;\n      this.maxWidth$.next();\n    }\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"slides\",\n    set: function set(value) {\n      this.slides$.next(value);\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"orientation\",\n    get: function get() {\n      return this._orientation;\n    }\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n    ,\n    set: function set(value) {\n      this.orientation$.next(value);\n      this._orientation = value;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"currentIndex\",\n    get: function get() {\n      if (this.listKeyManager) {\n        return this.listKeyManager.activeItemIndex;\n      }\n\n      return 0;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"currentSlide\",\n    get: function get() {\n      if (this.listKeyManager) {\n        return this.listKeyManager.activeItem;\n      }\n\n      return null;\n    }\n  }]);\n\n  return MatCarouselComponent;\n}();\n\nMatCarouselComponent.ɵfac = function MatCarouselComponent_Factory(t) {\n  return new (t || MatCarouselComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AnimationBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nMatCarouselComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCarouselComponent,\n  selectors: [[\"mat-carousel\"]],\n  contentQueries: function MatCarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatCarouselSlideComponent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slidesList = _t);\n    }\n  },\n  viewQuery: function MatCarouselComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c1, true);\n      ɵngcc0.ɵɵviewQuery(_c2, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.carouselContainer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.carouselList = _t.first);\n    }\n  },\n  hostBindings: function MatCarouselComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keyup\", function MatCarouselComponent_keyup_HostBindingHandler($event) {\n        return ctx.onKeyUp($event);\n      })(\"mouseenter\", function MatCarouselComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function MatCarouselComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      })(\"mousewheel\", function MatCarouselComponent_mousewheel_HostBindingHandler($event) {\n        return ctx.onMouseWheel($event);\n      })(\"resize\", function MatCarouselComponent_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    timings: \"timings\",\n    hideArrows: \"hideArrows\",\n    hideIndicators: \"hideIndicators\",\n    color: \"color\",\n    maintainAspectRatio: \"maintainAspectRatio\",\n    proportion: \"proportion\",\n    slideHeight: \"slideHeight\",\n    useKeyboard: \"useKeyboard\",\n    useMouseWheel: \"useMouseWheel\",\n    autoplay: \"autoplay\",\n    interval: \"interval\",\n    loop: \"loop\",\n    maxWidth: \"maxWidth\",\n    slides: \"slides\",\n    orientation: \"orientation\",\n    svgIconOverrides: \"svgIconOverrides\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  decls: 8,\n  vars: 12,\n  consts: [[\"tabindex\", \"0\", 1, \"carousel\"], [\"carouselContainer\", \"\"], [\"role\", \"listbox\", 1, \"carousel-list\"], [\"carouselList\", \"\"], [\"class\", \"carousel-slide\", \"role\", \"option\", 3, \"padding-bottom\", \"height\", \"panleft\", \"panright\", \"panend\", \"pancancel\", 4, \"ngFor\", \"ngForOf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", 3, \"color\", \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"carousel-indicators\", \"tabindex\", \"-1\", 3, \"flex-direction\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"carousel-slide\", 3, \"panleft\", \"panright\", \"panend\", \"pancancel\"], [\"carouselSlide\", \"\"], [3, \"ngTemplateOutlet\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", 3, \"color\", \"disabled\", \"click\"], [3, \"svgIcon\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultArrowBack\", \"\"], [3, \"svgIcon\"], [\"defaultArrowForward\", \"\"], [\"tabindex\", \"-1\", 1, \"carousel-indicators\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"mat-mini-fab\", \"\", 3, \"color\", \"disabled\", \"click\", \"focus\"]],\n  template: function MatCarouselComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"ul\", 2, 3);\n      ɵngcc0.ɵɵtemplate(4, MatCarouselComponent_li_4_Template, 3, 5, \"li\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(5, MatCarouselComponent_button_5_Template, 4, 4, \"button\", 5);\n      ɵngcc0.ɵɵtemplate(6, MatCarouselComponent_button_6_Template, 4, 4, \"button\", 5);\n      ɵngcc0.ɵɵtemplate(7, MatCarouselComponent_div_7_Template, 2, 3, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"max-width\", ctx.maxWidth)(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵstyleProp(\"flex-direction\", ctx.orientation === \"rtl\" ? \"row-reverse\" : \"row\")(\"height\", !ctx.maintainAspectRatio ? \"100%\" : \"auto\");\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slidesList);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hideArrows);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hideIndicators);\n    }\n  },\n  directives: [ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc4.MatButton, ɵngcc5.MatIcon],\n  styles: [\".carousel[_ngcontent-%COMP%]{outline:none;overflow:hidden;position:relative;width:100%}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:absolute;top:50%;transform:translateY(-50%);z-index:1}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-of-type{left:30px}.carousel[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:last-of-type{right:30px}.carousel-list[_ngcontent-%COMP%]{list-style:none;margin:0;padding:0}.carousel-list[_ngcontent-%COMP%], .carousel-slide[_ngcontent-%COMP%]{display:flex;position:relative;width:100%}.carousel-slide[_ngcontent-%COMP%]{flex-shrink:0;height:0}.carousel-slide[_ngcontent-%COMP%]:hover{cursor:-webkit-grab;cursor:grab}.carousel-indicators[_ngcontent-%COMP%]{bottom:15px;display:flex;left:50%;outline:none;position:absolute;transform:translateX(-50%);z-index:1}.carousel-indicators[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{height:10px;margin:7.5px;width:10px}\"]\n});\n/** @nocollapse */\n\nMatCarouselComponent.ctorParameters = function () {\n  return [{\n    type: AnimationBuilder\n  }, {\n    type: Renderer2\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\nMatCarouselComponent.propDecorators = {\n  timings: [{\n    type: Input\n  }],\n  svgIconOverrides: [{\n    type: Input\n  }],\n  autoplay: [{\n    type: Input\n  }],\n  interval: [{\n    type: Input\n  }],\n  loop: [{\n    type: Input\n  }],\n  hideArrows: [{\n    type: Input\n  }],\n  hideIndicators: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  maxWidth: [{\n    type: Input\n  }],\n  maintainAspectRatio: [{\n    type: Input\n  }],\n  proportion: [{\n    type: Input\n  }],\n  slideHeight: [{\n    type: Input\n  }],\n  slides: [{\n    type: Input\n  }],\n  useKeyboard: [{\n    type: Input\n  }],\n  useMouseWheel: [{\n    type: Input\n  }],\n  orientation: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  slidesList: [{\n    type: ContentChildren,\n    args: [MatCarouselSlideComponent]\n  }],\n  carouselContainer: [{\n    type: ViewChild,\n    args: ['carouselContainer']\n  }],\n  carouselList: [{\n    type: ViewChild,\n    args: ['carouselList']\n  }],\n  onKeyUp: [{\n    type: HostListener,\n    args: ['keyup', ['$event']]\n  }],\n  onMouseEnter: [{\n    type: HostListener,\n    args: ['mouseenter']\n  }],\n  onMouseLeave: [{\n    type: HostListener,\n    args: ['mouseleave']\n  }],\n  onMouseWheel: [{\n    type: HostListener,\n    args: ['mousewheel', ['$event']]\n  }],\n  onResize: [{\n    type: HostListener,\n    args: ['window:resize', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCarouselComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-carousel',\n      template: \"<div\\r\\n  #carouselContainer\\r\\n  class=\\\"carousel\\\"\\r\\n  tabindex=\\\"0\\\"\\r\\n  [style.max-width]=\\\"maxWidth\\\"\\r\\n  [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\r\\n>\\r\\n  <ul\\r\\n    #carouselList\\r\\n    class=\\\"carousel-list\\\"\\r\\n    role=\\\"listbox\\\"\\r\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\r\\n    [style.height]=\\\"!maintainAspectRatio ? '100%' : 'auto'\\\"\\r\\n  >\\r\\n    <li\\r\\n      #carouselSlide\\r\\n      *ngFor=\\\"let slide of slidesList\\\"\\r\\n      class=\\\"carousel-slide\\\"\\r\\n      role=\\\"option\\\"\\r\\n      [style.padding-bottom]=\\\"maintainAspectRatio && proportion ? proportion + '%': '0px'\\\"\\r\\n      [style.height]=\\\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\\\"\\r\\n      (panleft)=\\\"onPan($event, carouselSlide)\\\"\\r\\n      (panright)=\\\"onPan($event, carouselSlide)\\\"\\r\\n      (panend)=\\\"onPanEnd($event, carouselSlide)\\\"\\r\\n      (pancancel)=\\\"onPanEnd($event, carouselSlide)\\\"\\r\\n    >\\r\\n      <ng-container [ngTemplateOutlet]=\\\"slide.templateRef\\\"></ng-container>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n  <button\\r\\n    *ngIf=\\\"!hideArrows\\\"\\r\\n    mat-icon-button\\r\\n    type=\\\"button\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    [color]=\\\"color\\\"\\r\\n    [disabled]=\\\"!loop && currentIndex == 0\\\"\\r\\n    (click)=\\\"previous()\\\"\\r\\n  >\\r\\n    <mat-icon\\r\\n      *ngIf=\\\"svgIconOverrides?.arrowBack; else: defaultArrowBack\\\"\\r\\n      [svgIcon]=\\\"svgIconOverrides.arrowBack\\\"\\r\\n    ></mat-icon>\\r\\n    <ng-template #defaultArrowBack>\\r\\n      <mat-icon>arrow_back</mat-icon>\\r\\n    </ng-template>\\r\\n  </button>\\r\\n  <button\\r\\n    *ngIf=\\\"!hideArrows\\\"\\r\\n    mat-icon-button\\r\\n    type=\\\"button\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    [color]=\\\"color\\\"\\r\\n    [disabled]=\\\"!loop && currentIndex == slidesList.length - 1\\\"\\r\\n    (click)=\\\"next()\\\"\\r\\n  >\\r\\n    <mat-icon\\r\\n      *ngIf=\\\"svgIconOverrides?.arrowForward; else: defaultArrowForward\\\"\\r\\n      [svgIcon]=\\\"svgIconOverrides.arrowForward\\\"\\r\\n    ></mat-icon>\\r\\n    <ng-template #defaultArrowForward>\\r\\n      <mat-icon>arrow_forward</mat-icon>\\r\\n    </ng-template>\\r\\n  </button>\\r\\n\\r\\n  <div\\r\\n    *ngIf=\\\"!hideIndicators\\\"\\r\\n    class=\\\"carousel-indicators\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    [style.flex-direction]=\\\"orientation === 'rtl' ? 'row-reverse' : 'row'\\\"\\r\\n  >\\r\\n    <button\\r\\n      *ngFor=\\\"let slide of slidesList; let i = index\\\"\\r\\n      type=\\\"button\\\"\\r\\n      tabindex=\\\"-1\\\"\\r\\n      mat-mini-fab\\r\\n      [color]=\\\"color\\\"\\r\\n      [disabled]=\\\"i == currentIndex\\\"\\r\\n      (click)=\\\"slideTo(i)\\\"\\r\\n      (focus)=\\\"carouselContainer.focus()\\\"\\r\\n    ></button>\\r\\n  </div>\\r\\n</div>\\r\\n\",\n      styles: [\".carousel{outline:none;overflow:hidden;position:relative;width:100%}.carousel>button{position:absolute;top:50%;transform:translateY(-50%);z-index:1}.carousel>button:first-of-type{left:30px}.carousel>button:last-of-type{right:30px}.carousel-list{list-style:none;margin:0;padding:0}.carousel-list,.carousel-slide{display:flex;position:relative;width:100%}.carousel-slide{flex-shrink:0;height:0}.carousel-slide:hover{cursor:-webkit-grab;cursor:grab}.carousel-indicators{bottom:15px;display:flex;left:50%;outline:none;position:absolute;transform:translateX(-50%);z-index:1}.carousel-indicators>button{height:10px;margin:7.5px;width:10px}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc3.AnimationBuilder\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    timings: [{\n      type: Input\n    }],\n    hideArrows: [{\n      type: Input\n    }],\n    hideIndicators: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    maintainAspectRatio: [{\n      type: Input\n    }],\n    proportion: [{\n      type: Input\n    }],\n    slideHeight: [{\n      type: Input\n    }],\n    useKeyboard: [{\n      type: Input\n    }],\n    useMouseWheel: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    autoplay: [{\n      type: Input\n    }],\n    interval: [{\n      type: Input\n    }],\n    loop: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }],\n    slides: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyUp: [{\n      type: HostListener,\n      args: ['keyup', ['$event']]\n    }],\n\n    /**\n     * @return {?}\n     */\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n\n    /**\n     * @return {?}\n     */\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseWheel: [{\n      type: HostListener,\n      args: ['mousewheel', ['$event']]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }],\n    svgIconOverrides: [{\n      type: Input\n    }],\n    slidesList: [{\n      type: ContentChildren,\n      args: [MatCarouselSlideComponent]\n    }],\n    carouselContainer: [{\n      type: ViewChild,\n      args: ['carouselContainer']\n    }],\n    carouselList: [{\n      type: ViewChild,\n      args: ['carouselList']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatCarouselComponent.prototype.timings;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.svgIconOverrides;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.hideArrows;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.hideIndicators;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.color;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.maintainAspectRatio;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.proportion;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.slideHeight;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.useKeyboard;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.useMouseWheel;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.change;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.slidesList;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.carouselContainer;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.carouselList;\n  /** @type {?} */\n\n  MatCarouselComponent.prototype.listKeyManager;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype._autoplay;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.autoplay$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.interval$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.slides$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype._maxWidth;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.maxWidth$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype._loop;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.loop$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype._orientation;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.orientation$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.timer$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.timerStop$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.destroy$;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.playing;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.animationBuilder;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.renderer;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  MatCarouselComponent.prototype.platformId;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/carousel.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n// https://github.com/angular/angular/issues/10541#issuecomment-300761387\n\n\nvar MatCarouselHammerConfig = /*#__PURE__*/function (_HammerGestureConfig) {\n  _inherits(MatCarouselHammerConfig, _HammerGestureConfig);\n\n  var _super = _createSuper(MatCarouselHammerConfig);\n\n  function MatCarouselHammerConfig() {\n    var _this5;\n\n    _classCallCheck(this, MatCarouselHammerConfig);\n\n    _this5 = _super.apply(this, arguments);\n    _this5.overrides = {\n      pinch: {\n        enable: false\n      },\n      rotate: {\n        enable: false\n      }\n    };\n    return _this5;\n  }\n\n  return MatCarouselHammerConfig;\n}(HammerGestureConfig);\n\nMatCarouselHammerConfig.ɵfac = function MatCarouselHammerConfig_Factory(t) {\n  return ɵMatCarouselHammerConfig_BaseFactory(t || MatCarouselHammerConfig);\n};\n\nMatCarouselHammerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MatCarouselHammerConfig,\n  factory: MatCarouselHammerConfig.ɵfac\n});\nvar ɵMatCarouselHammerConfig_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatCarouselHammerConfig);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCarouselHammerConfig, [{\n    type: Injectable\n  }], null, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  MatCarouselHammerConfig.prototype.overrides;\n}\n\nvar MatCarouselModule = /*#__PURE__*/function () {\n  function MatCarouselModule() {\n    _classCallCheck(this, MatCarouselModule);\n  }\n\n  _createClass(MatCarouselModule, null, [{\n    key: \"forRoot\",\n\n    /**\r\n     * @return {?}\r\n     */\n    value: function forRoot() {\n      return {\n        ngModule: MatCarouselModule,\n        providers: [{\n          provide: HAMMER_GESTURE_CONFIG,\n          useClass: MatCarouselHammerConfig\n        }]\n      };\n    }\n  }]);\n\n  return MatCarouselModule;\n}();\n\nMatCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatCarouselModule\n});\nMatCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatCarouselModule_Factory(t) {\n    return new (t || MatCarouselModule)();\n  },\n  imports: [[CommonModule, MatButtonModule, MatIconModule, HammerModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCarouselModule, {\n    declarations: function declarations() {\n      return [MatCarouselComponent, MatCarouselSlideComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, MatButtonModule, MatIconModule, HammerModule];\n    },\n    exports: function exports() {\n      return [MatCarouselComponent, MatCarouselSlideComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCarouselModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MatCarouselComponent, MatCarouselSlideComponent],\n      imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\n      exports: [MatCarouselComponent, MatCarouselSlideComponent]\n    }]\n  }], null, null);\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/carousel.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @record\r\n */\n\n\nfunction MatCarousel() {}\n\nif (false) {\n  /** @type {?} */\n  MatCarousel.prototype.timings;\n  /** @type {?} */\n\n  MatCarousel.prototype.autoplay;\n  /** @type {?} */\n\n  MatCarousel.prototype.interval;\n  /** @type {?} */\n\n  MatCarousel.prototype.loop;\n  /** @type {?} */\n\n  MatCarousel.prototype.hideArrows;\n  /** @type {?} */\n\n  MatCarousel.prototype.hideIndicators;\n  /** @type {?} */\n\n  MatCarousel.prototype.color;\n  /** @type {?} */\n\n  MatCarousel.prototype.maxWidth;\n  /** @type {?} */\n\n  MatCarousel.prototype.proportion;\n  /** @type {?} */\n\n  MatCarousel.prototype.slides;\n  /** @type {?} */\n\n  MatCarousel.prototype.svgIconOverrides;\n  /** @type {?} */\n\n  MatCarousel.prototype.useKeyboard;\n  /** @type {?} */\n\n  MatCarousel.prototype.useMouseWheel;\n  /** @type {?} */\n\n  MatCarousel.prototype.orientation;\n}\n/**\r\n * @record\r\n */\n\n\nfunction SvgIconOverrides() {}\n\nif (false) {\n  /** @type {?} */\n  SvgIconOverrides.prototype.arrowBack;\n  /** @type {?} */\n\n  SvgIconOverrides.prototype.arrowForward;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/carousel-slide/carousel-slide.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @record\r\n */\n\n\nfunction MatCarouselSlide() {}\n\nif (false) {\n  /** @type {?} */\n  MatCarouselSlide.prototype.image;\n  /** @type {?} */\n\n  MatCarouselSlide.prototype.overlayColor;\n  /** @type {?} */\n\n  MatCarouselSlide.prototype.hideOverlay;\n  /** @type {?} */\n\n  MatCarouselSlide.prototype.disabled;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngbmodule-material-carousel.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { MatCarouselComponent, MatCarouselHammerConfig, MatCarouselModule, MatCarouselSlideComponent };","map":{"version":3,"sources":["../../../projects/carousel/src/lib/carousel-slide/carousel-slide.component.ts","../../../projects/carousel/src/lib/carousel.component.ts","../../../projects/carousel/src/lib/carousel.module.ts","../../../projects/carousel/src/lib/carousel.ts","../../../projects/carousel/src/lib/carousel-slide/carousel-slide.ts"],"names":[],"mappings":"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","sourcesContent":["import { ListKeyManagerOption } from '@angular/cdk/a11y';\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\nimport { MatCarouselSlide } from './carousel-slide';\r\n\r\n@Component({\r\n  selector: 'mat-carousel-slide',\r\n  templateUrl: './carousel-slide.component.html',\r\n  styleUrls: ['./carousel-slide.component.scss']\r\n})\r\nexport class MatCarouselSlideComponent\r\n  implements ListKeyManagerOption, MatCarouselSlide, OnInit {\r\n  @Input() public image: SafeStyle;\r\n  @Input() public overlayColor = '#00000040';\r\n  @Input() public hideOverlay = false;\r\n  @Input() public disabled = false; // implements ListKeyManagerOption\r\n\r\n  @ViewChild(TemplateRef) public templateRef: TemplateRef<any>;\r\n    \r\n  constructor(public sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (this.image) {\r\n      this.image = this.sanitizer.bypassSecurityTrustStyle(`url(\"${this.image}\")`);\r\n    }\r\n  }\r\n}\r\n","import { animate, style, AnimationBuilder } from '@angular/animations';\r\nimport { ListKeyManager } from '@angular/cdk/a11y';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  PLATFORM_ID,\r\n  QueryList,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { interval, BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport { MatCarousel, Orientation, SvgIconOverrides } from './carousel';\r\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\r\n\r\nenum Direction {\r\n  Left,\r\n  Right,\r\n  Index\r\n}\r\n\r\n@Component({\r\n  selector: 'mat-carousel',\r\n  templateUrl: './carousel.component.html',\r\n  styleUrls: ['./carousel.component.scss']\r\n})\r\nexport class MatCarouselComponent\r\n  implements AfterContentInit, AfterViewInit, MatCarousel, OnDestroy {\r\n  @Input() public timings = '250ms ease-in';\r\n  @Input() public svgIconOverrides: SvgIconOverrides;\r\n\r\n  @Input()\r\n  public set autoplay(value: boolean) {\r\n    this.autoplay$.next(value);\r\n    this._autoplay = value;\r\n  }\r\n\r\n  @Input()\r\n  public set interval(value: number) {\r\n    this.interval$.next(value);\r\n  }\r\n\r\n  public get loop(): boolean {\r\n    return this._loop;\r\n  }\r\n  @Input()\r\n  public set loop(value: boolean) {\r\n    this.loop$.next(value);\r\n    this._loop = value;\r\n  }\r\n\r\n  @Input() public hideArrows = true;\r\n  @Input() public hideIndicators = true;\r\n  @Input() public color: ThemePalette = 'accent';\r\n\r\n  public get maxWidth(): string {\r\n    return this._maxWidth;\r\n  }\r\n  @Input()\r\n  public set maxWidth(value: string) {\r\n    this._maxWidth = value;\r\n    this.maxWidth$.next();\r\n  }\r\n\r\n  @Input() public maintainAspectRatio = true;\r\n  @Input() public proportion = 25;\r\n  @Input() public slideHeight = '100%';\r\n\r\n  @Input()\r\n  public set slides(value: number) {\r\n    this.slides$.next(value);\r\n  }\r\n\r\n  @Input() public useKeyboard = false;\r\n  @Input() public useMouseWheel = false;\r\n\r\n  public get orientation(): Orientation {\r\n    return this._orientation;\r\n  }\r\n  @Input()\r\n  public set orientation(value: Orientation) {\r\n    this.orientation$.next(value);\r\n    this._orientation = value;\r\n  }\r\n\r\n  @Output()\r\n  public change: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  public get currentIndex(): number {\r\n    if (this.listKeyManager) {\r\n      return this.listKeyManager.activeItemIndex;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n  public get currentSlide(): MatCarouselSlideComponent {\r\n    if (this.listKeyManager) {\r\n      return this.listKeyManager.activeItem;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  @ContentChildren(MatCarouselSlideComponent) public slidesList: QueryList<\r\n    MatCarouselSlideComponent\r\n  >;\r\n  @ViewChild('carouselContainer') private carouselContainer: ElementRef<\r\n    HTMLDivElement\r\n  >;\r\n  @ViewChild('carouselList') private carouselList: ElementRef<HTMLElement>;\r\n  public listKeyManager: ListKeyManager<MatCarouselSlideComponent>;\r\n\r\n  private _autoplay = true;\r\n  private autoplay$ = new Subject<boolean>();\r\n\r\n  private interval$ = new BehaviorSubject<number>(5000);\r\n  private slides$ = new BehaviorSubject<number>(null);\r\n\r\n  private _maxWidth = 'auto';\r\n  private maxWidth$ = new Subject<never>();\r\n\r\n  private _loop = true;\r\n  private loop$ = new Subject<boolean>();\r\n\r\n  private _orientation: Orientation = 'ltr';\r\n  private orientation$ = new Subject<Orientation>();\r\n\r\n  private timer$: Observable<number>;\r\n  private timerStop$ = new Subject<never>();\r\n\r\n  private destroy$ = new Subject<never>();\r\n  private playing = false;\r\n\r\n  constructor(\r\n    private animationBuilder: AnimationBuilder,\r\n    private renderer: Renderer2,\r\n    @Inject(PLATFORM_ID) private platformId\r\n  ) {}\r\n\r\n  public ngAfterContentInit(): void {\r\n    this.listKeyManager = new ListKeyManager(this.slidesList)\r\n      .withVerticalOrientation(false)\r\n      .withHorizontalOrientation(this._orientation)\r\n      .withWrap(this._loop);\r\n\r\n    this.listKeyManager.updateActiveItem(0);\r\n    this.listKeyManager.change\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => this.playAnimation());\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(value => {\r\n      this.stopTimer();\r\n      this.startTimer(value);\r\n    });\r\n\r\n    this.interval$.pipe(takeUntil(this.destroy$)).subscribe(value => {\r\n      this.stopTimer();\r\n      this.resetTimer(value);\r\n      this.startTimer(this._autoplay);\r\n    });\r\n\r\n    this.maxWidth$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => this.slideTo(0));\r\n\r\n    this.loop$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(value => this.listKeyManager.withWrap(value));\r\n\r\n    this.orientation$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(value => this.listKeyManager.withHorizontalOrientation(value));\r\n\r\n    this.slides$\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        filter(value => value && value < this.slidesList.length)\r\n      )\r\n      .subscribe(value => this.resetSlides(value));\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  public next(): void {\r\n    this.goto(Direction.Right);\r\n  }\r\n\r\n  public previous(): void {\r\n    this.goto(Direction.Left);\r\n  }\r\n\r\n  public slideTo(index: number): void {\r\n    this.goto(Direction.Index, index);\r\n  }\r\n\r\n  @HostListener('keyup', ['$event'])\r\n  public onKeyUp(event: KeyboardEvent): void {\r\n    if (this.useKeyboard && !this.playing) {\r\n      this.listKeyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  public onMouseEnter(): void {\r\n    this.stopTimer();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  public onMouseLeave(): void {\r\n    this.startTimer(this._autoplay);\r\n  }\r\n\r\n  @HostListener('mousewheel', ['$event'])\r\n  public onMouseWheel(event: MouseWheelEvent): void {\r\n    if (this.useMouseWheel) {\r\n      event.preventDefault(); // prevent window to scroll\r\n      const Δ = Math.sign(event.deltaY);\r\n\r\n      if (Δ > 0) {\r\n        this.next();\r\n      } else if (Δ < 0) {\r\n        this.previous();\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  public onResize(event: Event): void {\r\n    // Reset carousel when window is resized\r\n    // in order to avoid major glitches.\r\n    this.slideTo(0);\r\n  }\r\n\r\n  public onPan(event: any, slideElem: HTMLElement): void {\r\n    // https://github.com/angular/angular/issues/10541#issuecomment-346539242\r\n    // if y velocity is greater, it's a panup/pandown, so ignore.\r\n    if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\r\n      return;\r\n    }\r\n    let Δx = event.deltaX;\r\n    if (this.isOutOfBounds()) {\r\n      Δx *= 0.2; // decelerate movement;\r\n    }\r\n\r\n    this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\r\n    this.renderer.setStyle(\r\n      this.carouselList.nativeElement,\r\n      'transform',\r\n      this.getTranslation(this.getOffset() + Δx)\r\n    );\r\n  }\r\n\r\n  public onPanEnd(event: any, slideElem: HTMLElement): void {\r\n    this.renderer.removeStyle(slideElem, 'cursor');\r\n\r\n    if (\r\n      !this.isOutOfBounds() &&\r\n      Math.abs(event.deltaX) > this.getWidth() * 0.25\r\n    ) {\r\n      if (event.deltaX <= 0) {\r\n        this.next();\r\n        return;\r\n      }\r\n      this.previous();\r\n      return;\r\n    }\r\n    this.playAnimation(); // slide back, don't change current index\r\n  }\r\n\r\n  private isOutOfBounds(): boolean {\r\n    const sign = this.orientation === 'rtl' ? -1 : 1;\r\n    const left =\r\n      sign *\r\n      (this.carouselList.nativeElement.getBoundingClientRect().left -\r\n        this.carouselList.nativeElement.offsetParent.getBoundingClientRect()\r\n          .left);\r\n    const lastIndex = this.slidesList.length - 1;\r\n    const width = -this.getWidth() * lastIndex;\r\n\r\n    return (\r\n      (this.listKeyManager.activeItemIndex === 0 && left >= 0) ||\r\n      (this.listKeyManager.activeItemIndex === lastIndex && left <= width)\r\n    );\r\n  }\r\n\r\n  private isVisible(): boolean {\r\n    if (!isPlatformBrowser(this.platformId)) {\r\n      return false;\r\n    }\r\n\r\n    const elem = this.carouselContainer.nativeElement;\r\n    const docViewTop = window.pageYOffset;\r\n    const docViewBottom = docViewTop + window.innerHeight;\r\n    const elemOffset = elem.getBoundingClientRect();\r\n    const elemTop = docViewTop + elemOffset.top;\r\n    const elemBottom = elemTop + elemOffset.height;\r\n\r\n    return elemBottom <= docViewBottom || elemTop >= docViewTop;\r\n  }\r\n\r\n  private getOffset(): number {\r\n    const offset = this.listKeyManager.activeItemIndex * this.getWidth();\r\n    const sign = this.orientation === 'rtl' ? 1 : -1;\r\n    return sign * offset;\r\n  }\r\n\r\n  private getTranslation(offset: number): string {\r\n    return `translateX(${offset}px)`;\r\n  }\r\n\r\n  private getWidth(): number {\r\n    return this.carouselContainer.nativeElement.clientWidth;\r\n  }\r\n\r\n  private goto(direction: Direction, index?: number): void {\r\n    if (!this.playing) {\r\n      const rtl = this.orientation === 'rtl';\r\n\r\n      switch (direction) {\r\n        case Direction.Left:\r\n          return rtl\r\n            ? this.listKeyManager.setNextItemActive()\r\n            : this.listKeyManager.setPreviousItemActive();\r\n        case Direction.Right:\r\n          return rtl\r\n            ? this.listKeyManager.setPreviousItemActive()\r\n            : this.listKeyManager.setNextItemActive();\r\n        case Direction.Index:\r\n          return this.listKeyManager.setActiveItem(index);\r\n      }\r\n    }\r\n  }\r\n\r\n  private playAnimation(): void {\r\n    const translation = this.getTranslation(this.getOffset());\r\n    const factory = this.animationBuilder.build(\r\n      animate(this.timings, style({ transform: translation }))\r\n    );\r\n    const animation = factory.create(this.carouselList.nativeElement);\r\n\r\n    animation.onStart(() => (this.playing = true));\r\n    animation.onDone(() => {\r\n      this.change.emit(this.currentIndex);\r\n      this.playing = false;\r\n      this.renderer.setStyle(\r\n        this.carouselList.nativeElement,\r\n        'transform',\r\n        translation\r\n      );\r\n      animation.destroy();\r\n    });\r\n    animation.play();\r\n  }\r\n\r\n  private resetSlides(slides: number): void {\r\n    this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\r\n  }\r\n\r\n  private resetTimer(value: number): void {\r\n    this.timer$ = interval(value);\r\n  }\r\n\r\n  private startTimer(autoplay: boolean): void {\r\n    if (!autoplay) {\r\n      return;\r\n    }\r\n\r\n    this.timer$\r\n      .pipe(\r\n        takeUntil(this.timerStop$),\r\n        takeUntil(this.destroy$),\r\n        filter(() => this.isVisible())\r\n      )\r\n      .subscribe(() => {\r\n        this.listKeyManager.withWrap(true).setNextItemActive();\r\n        this.listKeyManager.withWrap(this.loop);\r\n      });\r\n  }\r\n\r\n  private stopTimer(): void {\r\n    this.timerStop$.next();\r\n  }\r\n}\r\n","import { NgModule, Injectable } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { MatCarouselComponent } from './carousel.component';\r\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\r\nimport {\r\n  HammerGestureConfig,\r\n  HAMMER_GESTURE_CONFIG,\r\n  HammerModule\r\n} from '@angular/platform-browser';\r\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\r\n\r\n// https://github.com/angular/angular/issues/10541#issuecomment-300761387\r\n@Injectable()\r\nexport class MatCarouselHammerConfig extends HammerGestureConfig {\r\n  overrides = {\r\n    pinch: { enable: false },\r\n    rotate: { enable: false }\r\n  };\r\n}\r\n@NgModule({\r\n  declarations: [MatCarouselComponent, MatCarouselSlideComponent],\r\n  imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\r\n  exports: [MatCarouselComponent, MatCarouselSlideComponent]\r\n})\r\nexport class MatCarouselModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MatCarouselModule,\r\n      providers: [\r\n        { provide: HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { ThemePalette } from '@angular/material/core';\r\n\r\nexport interface MatCarousel {\r\n  // Animations.\r\n  timings: string;\r\n  autoplay: boolean;\r\n  interval: number;\r\n  // Navigation.\r\n  loop: boolean;\r\n  hideArrows: boolean;\r\n  hideIndicators: boolean;\r\n  // Appearance.\r\n  color: ThemePalette;\r\n  maxWidth: string;\r\n  proportion: number;\r\n  slides: number;\r\n  svgIconOverrides: SvgIconOverrides;\r\n  // Accessibility.\r\n  useKeyboard: boolean;\r\n  useMouseWheel: boolean;\r\n  orientation: Orientation;\r\n}\r\n\r\nexport type Orientation = 'ltr' | 'rtl';\r\nexport interface SvgIconOverrides {\r\n  arrowBack: string;\r\n  arrowForward: string;\r\n}\r\n","import { SafeStyle } from '@angular/platform-browser';\r\n\r\nexport interface MatCarouselSlide {\r\n  image: SafeStyle;\r\n  overlayColor: string;\r\n  hideOverlay: boolean;\r\n  disabled: boolean;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}